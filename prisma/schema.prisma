// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id
  username String @unique
  email    String @unique
  password String
  type     String
  images Image[]
}

model Artist {
  id     String          @id
  name   String
  images Image[]
  tracks ArtistToTrack[]
  albums ArtistToAlbum[]
}

model Track {
  id          String          @id
  title       String
  album       Album?          @relation(fields: [albumId], references: [id])
  albumId     String?
  disc_number Int
  images      Image[]
  artists     ArtistToTrack[]
}

model ArtistToAlbum {
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId String
  album    Album  @relation(fields: [albumId], references: [id])
  albumId  String

  @@id([albumId, artistId])
}

model ArtistToTrack {
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId String
  track    Track  @relation(fields: [trackId], references: [id])
  trackId  String

  @@id([trackId, artistId])
}

model Album {
  id           String          @id
  name         String
  type         String
  tracks       Track[]
  images       Image[]
  release_date String
  genres       GenreToAlbum[]
  artists      ArtistToAlbum[]
}

model GenreToAlbum {
  album   Album  @relation(fields: [albumId], references: [id])
  albumId String
  genre   Genre  @relation(fields: [genreId], references: [id])
  genreId String

  @@id([albumId, genreId])
}

model Image {
  id       String  @id
  artist   Artist? @relation(fields: [artistId], references: [id])
  artistId String?
  album    Album?  @relation(fields: [albumId], references: [id])
  albumId  String?
  track    Track?  @relation(fields: [trackId], references: [id])
  trackId  String?
  user    User?  @relation(fields: [userId], references: [id])
  userId  String?
}

model Genre {
  id     String         @id
  name   String
  albums GenreToAlbum[]
}
